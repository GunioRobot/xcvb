(in-package xcvb)
(defun write-asd-system-header (filestream &optional (build-module *build-module*))
  (format filestream "(asdf:defsystem :~a~%" (fullname build-module))
  (unless (null (author build-module))
    (format filestream "~T:author ~s~%" (author build-module)))
  (unless (null (maintainer build-module))
    (format filestream "~T:maintainer ~s~%" (maintainer build-module)))
  (unless (null (licence build-module))
    (format filestream "~T:licence ~s~%" (licence build-module)))
  (unless (null (description build-module))
    (format filestream "~T:description ~s~%" (description build-module)))
  (unless (null (long-description build-module))
    (format filestream "~T:long-description ~s~%" (long-description build-module))))

(defgeneric write-asd-file (filestream node written-nodes)
  (:documentation "Writes the dependency graph to an asd file that can be used to compile it in the proper order"))

(defmethod write-asd-file (filestream (node lisp-node) written-nodes)
  (write-asd-system-header filestream)
  (format filestream "~T:components~%~T(")
  (mapcar (lambda (dependency) (write-asd-file filestream dependency written-nodes)) (dependencies node))
  (format filestream "))"))
  
(defmethod write-asd-file (filestream (node fasl-file-node) written-nodes)
  (unless (nth-value 1 (gethash (fullname node) written-nodes));If this node has already been written to the asd file, don't write it again.
    (setf (gethash (fullname node) written-nodes) nil);Add this node to the map of nodes already written to the asd file
    (if (rest (dependencies node))
      (progn 
        (mapcar (lambda (dependency) (write-asd-file filestream dependency written-nodes)) (dependencies node))
        (format filestream "(:file ~s :depends-on ~s)~%~T~T" (name node) (reduce (lambda (dependency-node rest) (if (typep dependency-node 'fasl-file-node) (push (name dependency-node) rest) rest)) (dependencies node) :initial-value nil :from-end T))
      )
      (format filestream "(:file ~s)~%~T~T" (name node)))))

(defmethod write-asd-file (filestream (node dependency-graph-node) written-nodes)
  (declare (ignore filestream node written-nodes)))
