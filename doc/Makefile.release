# See INSTALL for instructions. -*- Makefile -*-

PREFIX ?= /usr/local
LISP ?= sbcl
INSTALL_BIN ?= ${PREFIX}/bin
INSTALL_LISP ?= ${PREFIX}/share/common-lisp
LISP_SOURCE ?= ${INSTALL_LISP}/source
LISP_SYSTEMS ?= ${INSTALL_LISP}/systems

ifeq (${LISP},sbcl)
  XSH=$(shell echo SBCL_HOME="$$(sbcl --noinform --eval '(progn(princ(sb-ext:posix-getenv "SBCL_HOME"))(quit))')")
else
  XSH=
endif

export XCVB_PATH:=$(shell pwd):${LISP_SOURCE}

export PATH:=${INSTALL_BIN}:${PATH}

OPTIONS := PREFIX=${PREFIX} LISP=${LISP} \
		INSTALL_BIN=${INSTALL_BIN} INSTALL_LISP=${INSTALL_LISP} \
		LISP_SOURCE=${LISP_SOURCE} LISP_SYSTEMS=${LISP_SYSTEMS}

install-cl-launch:
	mkdir -p ${LISP_SOURCE}/cl-launch ${INSTALL_BIN}
	./dependencies/cl-launch/cl-launch.sh \
		-l ${LISP} \
		-I ${LISP_SOURCE}/cl-launch \
		-o ${INSTALL_BIN}/cl-launch \
		-B install

install: install-cl-launch
	mkdir -p ${INSTALL_BIN}
	${MAKE} ${XSH} -f xcvb.mk.${LISP} obj/xcvb.image
	ln -s ../obj xcvb/
	${MAKE} -C xcvb xcvb-bootstrapped-install ${OPTIONS}

install-source: install-cl-launch
	mkdir -p ${LISP_SOURCE}/xcvb ${LISP_SYSTEMS}
	for dir in asdf asdf-dependency-grovel closer-mop command-line-arguments ; do \
	  rsync -aC --exclude _darcs dependencies/$$dir ${LISP_SOURCE}/ ; \
	done
	cd xcvb && cp -a *.asd *.lisp *.xcvb ${LISP_SOURCE}/xcvb/
	ln -sf $$(find ${LISP_SOURCE}/ \( -name '*test*' -prune -false \) -o \
			 -type f -name '*.asd' ! -name '*test*' ) ${LISP_SYSTEMS}/

install-using-asdf: install-source
	${MAKE} -C xcvb xcvb-using-asdf ${OPTIONS}

update:
	for i in xcvb dependencies/asdf dependencies/asdf-dependency-grovel \
		dependencies/cl-launch dependencies/command-line-arguments ; do \
	  (echo -n "Updating $$i... " ; cd $$i ; git pull) ; \
	done ; \
	(echo -n "Updating dependencies/closer-mop... " ; cd dependencies/closer-mop ; \
	darcs pull -a ) ; \
	echo "You may have to regenerate the xcvb.mk.* bootstrap files..."
