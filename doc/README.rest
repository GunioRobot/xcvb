.. ; -*- mode:rst; -*-

===================================================================
XCVB - an eXtensible Component Verifier and Builder for Common Lisp
===================================================================

The goal of this project is to have a scalable system
to build large software in Common Lisp,
featuring deterministic separate compilation and
enforced locally-declared dependencies.


.. Contents::
..
    1  About XCVB
      1.1  Home page
      1.2  Dependencies
      1.3  Documentation
      1.4  Timeline
      1.5  Alternative
    2  Using XCVB 0.15
      2.1  Starting a new XCVB project
      2.2  Running XCVB
      2.3  Converting your ASDF system
      2.4  Further Limitations


About XCVB
==========

Home page
---------

The home page of the project is at
	http://common-lisp.net/project/xcvb/docs/xcvb.text

You can checkout our public repository with
	git clone http://common-lisp.net/project/xcvb/xcvb.git

Or if you are a project member, you can obtain write access using
	git clone ssh://USER@common-lisp.net/project/xcvb/public_html/xcvb.git


Dependencies
------------

You will need the following pieces of software to get XCVB running:

  * a Lisp implementation. We test with SBCL using the CFASL patch:
	http://cliki.net/SBCL

  * If you want CFASL, you may need this patch until it has been merged upstream:
	http://repo.or.cz/w/sbcl/jsnell.git?a=treediff;h=refs/heads/cfasl;hp=refs/heads/master;hb=cfasl;hpb=master

  * cl-launch:
	http://cliki.net/CL-Launch

  * asdf-dependency-grovel:
	http://cliki.net/asdf-dependency-grovel



Documentation
-------------

README.rest:
	This file describes how to currently use xcvb.
	As you can see, XCVB is not ready yet;
	however, development is underway, and things here
	should eventually be greatly simplified.

xcvb.rest ilc09-xcvb.rest:
	These files should provide with an overview of the project,
	its intended benefits, rationale and general design.

INTERNALS.rest:
	This file describes the internals of XCVB.

TODO.rest:
	The many items to improve XCVB in the future.

configure.mk.example:
	example file to copy into xcvb/configure.mk and edit,
	so as to be able to create the xcvb and asdf-to-xcvb executables.

setup.lisp.example:
	example of customization you will need to adapt XCVB to your project.


Timeline
--------

The original idea for what became XCVB came from discussions with James Knight
at ITA Software in 2007 and 2008.

XCVB was originally written by Spencer Brody under the supervision of
Francois-Rene Rideau from late May to mid August 2008.
The result was a working prototype,
but requiring some layer of hacks specific to the target on which XCVB was run
(an internal project at ITA Software).

Francois-Rene Rideau restarted work on it in mid December 2008.
We hope to have a complete release with example and documentation
ready for showing at ILC'09 by March 2008.


Alternative
-----------

Until XCVB is ready for general use,
you may want to use ASDF-DEPENDENCY-GROVEL and POIU
to achieve some of the same benefits with existing technology.


Using XCVB 0.15
===============

You may want to checkout the latest semi-release of xcvb, using git tag "xcvb_0.15".


Starting a new XCVB project
---------------------------

We'll publish an example soon.


Running XCVB
------------

We'll publish an example soon.


Converting your ASDF system
---------------------------

First, you need to use asdf-to-xcvb to convert your existing system
based on the .asd files.

Note: this isn't implemented yet;
I could give you the recipe to do it manually,
but I'd rather write the script that does it automatically.


Further Limitations
-------------------

If your build has any of the below complications,
you're currently out of luck until an extension is written
or unless you write such an extension yourself.

  * your build depends on data files.

  * your build generates lisp files dynamically.

  * your build otherwise uses some ASDF extension.
