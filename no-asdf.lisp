#+xcvb (module ())
(in-package :cl-user)
(eval-when (:compile-toplevel :load-toplevel :execute)
  (let ((package (find-package :asdf)))
    (when package
       #+sbcl (setf sb-ext:*module-provider-functions*
                    (delete-if (lambda (x)
                                 (when (and (symbolp x) (eq package (symbol-package x)))
                                   (format t "~&Deleted ~S from sb-ext:*module-provider-functions*" x)
                                   t))
                               sb-ext:*module-provider-functions*))
       (delete-package :asdf)
       (format t "~&Deleted old instance of ASDF.~%")))
  #+sbcl (pushnew :sbcl-hooks-require *features*)
  (format t "*features* = ~S~%" *features*)
  (finish-output)
  (values))
